version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: capsight_prod
      POSTGRES_USER: capsight_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U capsight_user -d capsight_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching and Job Queue
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ENV=production
    env_file:
      - ./backend/.env.prod
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app/ml/artifacts:/app/app/ml/artifacts
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background Worker (Celery)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ENV=production
    env_file:
      - ./backend/.env.prod
    command: celery -A app.core.celery worker --loglevel=info
    volumes:
      - ./backend/app/ml/artifacts:/app/app/ml/artifacts
      - worker_logs:/app/logs

  # Scheduled Tasks (Celery Beat)
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ENV=production
    env_file:
      - ./backend/.env.prod
    command: celery -A app.core.celery beat --loglevel=info
    volumes:
      - ./backend/app/ml/artifacts:/app/app/ml/artifacts
      - scheduler_logs:/app/logs

volumes:
  postgres_data:
  redis_data:
  backend_logs:
  nginx_logs:
  worker_logs:
  scheduler_logs:

networks:
  default:
    name: capsight_prod
