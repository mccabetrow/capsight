# PostgreSQL Read Replica Configuration
# docker-compose.replica.yml - Deploy with: docker-compose -f docker-compose.prod.yml -f docker-compose.replica.yml up

version: '3.8'

services:
  # Primary PostgreSQL (Master)
  postgres-primary:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: capsight_prod
      POSTGRES_USER: capsight_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-replication_password}
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./infrastructure/database/postgresql-primary.conf:/etc/postgresql/postgresql.conf
      - ./infrastructure/database/pg_hba-primary.conf:/etc/postgresql/pg_hba.conf
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U capsight_user -d capsight_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "role=primary"

  # Read Replica PostgreSQL
  postgres-replica:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: capsight_prod
      POSTGRES_USER: capsight_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
      PGUSER: postgres
      POSTGRES_MASTER_SERVICE: postgres-primary
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-replication_password}
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
      - ./infrastructure/database/postgresql-replica.conf:/etc/postgresql/postgresql.conf
      - ./infrastructure/database/setup-replica.sh:/docker-entrypoint-initdb.d/setup-replica.sh
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5433:5432"
    depends_on:
      - postgres-primary
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U capsight_user -d capsight_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "role=replica"

  # PgBouncer Connection Pooler
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    restart: unless-stopped
    environment:
      DATABASES_HOST: postgres-primary
      DATABASES_PORT: 5432
      DATABASES_USER: capsight_user
      DATABASES_PASSWORD: ${DB_PASSWORD:-change_this_password}
      DATABASES_DBNAME: capsight_prod
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
      MIN_POOL_SIZE: 10
      RESERVE_POOL_SIZE: 5
    volumes:
      - ./infrastructure/database/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./infrastructure/database/userlist.txt:/etc/pgbouncer/userlist.txt
    ports:
      - "6432:5432"
    depends_on:
      - postgres-primary
      - postgres-replica
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Database Monitoring
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://capsight_user:${DB_PASSWORD:-change_this_password}@postgres-primary:5432/capsight_prod?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres-primary

volumes:
  postgres_primary_data:
    driver: local
  postgres_replica_data:
    driver: local
